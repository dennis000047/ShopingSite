<!-- 右邊內容 -->
<link href="~/css/BEN.css" rel="stylesheet">
<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">

        <!-- 新增btn & 手機板選單 -->
        <h1>退貨申請</h1>
        <div class="top_nav justify-content-xl-end justify-content-between">
            <div class="layout-menu-toggle navbar-nav align-items-xl-center me-3 me-xl-0 d-xl-none">
                <a class="nav-item nav-link px-0 me-xl-4" href="javascript:void(0)">
                    <i class="bx bx-menu bx-sm"></i>
                </a>
            </div>
        </div>

        <!-- 顯示資訊 -->
        <div class="card" id="bannerVue">
            <div class="table-responsive text-nowrap">
                <table class="table banner_table">
                    <thead>
                        <tr>
                            <th class="img">商品</th>
                            <th class="title">訂單編號</th>
                            <th class="link">買家ID</th>
                            <th class="link">買家付款金額</th>
                            <th class="state">賣家ID</th>
                            <th class="state">賣家收款金額</th>
                            <th class="state">退貨已完成</th>
                        </tr>
                    </thead>
                    <tbody class="table-border-bottom-0">
                        <tr v-for="item in ReturnDTOes">
                            @* <td class="imgTd-1" data-bs-toggle="modal" :data-bs-target="'#'+item.num" :id="item.orderId">*@
                            <td class="imgTd">
                                <img :src="'https://localhost:7002'+item.image" class="imgWidth" :id="item.orderId">
                                <div class="imgMargin" alt="Image">
                                    <div>{{item.productName}}</div>
                                    <span class="nameDilute">{{item.model}}</span>
                                    <div v-if="item.sizeId!= 0">
                                        <p class=" badge rounded-pill Pcolor">美國尺碼:{{item.sizeId}}</p>
                                    </div>
                                </div>
                            </td>
                            <td>
                                <div>{{item.orderId}}</div>
                            </td>
                            <td>
                                <div>{{item.buyerId}}</div>
                            </td>
                            <td>
                                <div>NT${{item.buyerPrice}}</div>
                            </td>
                            <td>
                                <div>{{item.sellerId}}</div>
                            </td>
                            <td>
                                <div>NT${{item.sellerPrice}}</div>
                            </td>
                            <td>
                                <div class="tb_btn edit">
                                    <a>
                                        <i class="bx bx-badge-check" @@click="updateOrder(item)"></i>
                                    </a>
                                </div>
                            </td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.1.2/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script>
        $(".back_Returns").addClass('active');
        var webApiBaseAddress = "https://localhost:7139";
        var appVue = new Vue({
            el: "#bannerVue",
            name: "bannerVue",
            data: {
                ReturnDTOes: [],
                Filter: "",
                num: null,
            },
            mounted: function () {
                let _this = this;
                _this.getReturnDTOes();
            },
            methods: {
                getReturnDTOes: function () {
                    let _this = this;
                    axios.get(`${webApiBaseAddress}/api/B_BuyerOrders`).then(
                        response => {
                            _this.ReturnDTOes = response.data;
                            var ReturnList = [];
                            for (var i = 0; i < _this.ReturnDTOes.length; i++) {
                                var item = {};
                                item = _this.ReturnDTOes[i];
                                item.num = "A" + item.orderId;
                                ReturnList.push(item);

                            }
                            _this.ReturnDTOes = ReturnList;
                        }
                    );
                },
                updateOrder: function (ProductConfirmation) {
                    let _this = this;
                    var request = {};
                    request.ProductName = ProductConfirmation.productName;
                    request.Image = ProductConfirmation.image;
                    request.SizeId = ProductConfirmation.sizeId;
                    request.Price = ProductConfirmation.price;
                    request.CompleteTime = ProductConfirmation.completeTime;
                    request.ShippingAddress = ProductConfirmation.shippingAddress;
                    request.State = "退貨已完成";
                    request.Receiver = ProductConfirmation.receiver;
                    request.orderId = ProductConfirmation.orderId;
                    Swal.fire({
                        title: '確認商品已完成退貨?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                icon: 'success',
                                title: '已完成退貨',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            axios.put(`${webApiBaseAddress}/api/B_BuyerOrders/${ProductConfirmation.orderId}`, request).then(
                                response => {
                                    //alert(response.data);
                                    setTimeout(function () {
                                        _this.getReturnDTOes();
                                    }, 1500);
                                }
                            );
                        }
                    })
                },
            },
        });

    </script>
}