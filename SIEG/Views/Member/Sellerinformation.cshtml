@{
    ViewData["Title"] = "賣家信息";
    ViewData["enTitle"] = "Sellerinformation";
}

@section Style{
    <link href="~/css/BEN.css" rel="stylesheet">
}
<div id="appVue">
    <partial name="_MemberBanner" />
    <div class="container-fluid">
        <div class="row">
            <partial name="_Membersidebar">
                <div class="col-lg-7">
                    <div class="orderTopWidth-2">
                        <div>
                            <h1>收款</h1>
                            <p>請提供你的收款資訊</p>
                            <div>
                                <h4>
                                    帳戶資訊
                                </h4>
                            </div>
                            <div>
                                <label>名字</label>
                                <input type="text" disabled="disabled" name="text" class="form-control" :value="Sellerinformationdtoes.name">
                            </div>

                            <div class="addressgroup">
                                <label>電話號碼</label>
                                <input type="text" disabled="disabled" name="tel" class="form-control" :value="Sellerinformationdtoes.phone">
                            </div>

                            <div class="addressgroup">
                                <label>帳戶</label>
                                <input type="text" name="text" class="form-control" placeholder="銀行帳戶號碼" v-model="Sellerinformationdtoes.bankAccount">
                            </div>
                            <div class="addressgroup">
                                <label>請選擇銀行代號</label>
                                <select class="form-control" v-model="Bankcode">
                                    <option v-if="Sellerinformationdtoes.bankCode !=null">{{Sellerinformationdtoes.bankCode}}</option>
                                    <option v-if="Sellerinformationdtoes.bankCode != item.bankCode" v-for="item in BankCodesDTOes" :value="item.bankCode">
                                        {{item.bankCode}}
                                    </option>
                                </select>
                            </div>

                            <div class="addressgroup">
                                <a asp-area="" asp-controller="Member" asp-action="SettingCreditcard">
                                    <button type="button" class="btn btncolor">
                                        取消
                                    </button>
                                </a>
                                <input type="submit" class="btn btncolor inputright" value="儲存" @@click="update(Sellerinformationdtoes)">
                            </div>
                        </div>

                    </div>
                </div>
        </div>
    </div>
    <partial name="_FooterPartial" />
</div>

@section Scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.1.2/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script>
        var webApiBaseAddress = "https://localhost:7139";
        var appVue = new Vue({
            el: "#appVue",
            name: "appVue",
            data: {
                mID: sessionStorage.getItem("mID"),
                Bankcode: null,
                Sellerinformationdtoes: {},
                PersonalDTOes: {},
                BankCodesDTOes: [],

            },
            mounted: function () {
                let _this = this;
                $('.SidebarSetting').css("background", "#ededed");
                _this.getSellerinformationDTOes();
                _this.getBankCodesDTOes();
                _this.getPersonalDTOes();
            },
            methods: {
                getSellerinformationDTOes: function () {
                    let _this = this;
                    axios.get(`${webApiBaseAddress}/api/B_PaymentInformation/Sellerinformation/${_this.mID}`).then(
                        response => {
                            _this.Sellerinformationdtoes = response.data;
                            _this.Bankcode = _this.Sellerinformationdtoes.bankCode;
                        }
                    );
                },


                getBankCodesDTOes: function () {
                    let _this = this;
                    axios.get(`${webApiBaseAddress}/api/B_BankCode/`).then(
                        response => {
                            _this.BankCodesDTOes = response.data;
                            var BankCodesList = [];
                            for (var i = 0; i < _this.BankCodesDTOes.length; i++) {
                                var item = {};
                                item = _this.BankCodesDTOes[i];
                                BankCodesList.push(item);

                            }
                            _this.BankCodesDTOes = BankCodesList;
                        }
                    );
                },

                update: function (Sellerinformationdtoes) {
                    let _this = this;
                    var request = {};
                    request.MemberId = Sellerinformationdtoes.memberId
                    request.BankCode = _this.Bankcode;
                    request.BankAccount = Sellerinformationdtoes.bankAccount;
                    //var ret = confirm("確定要修改嗎?");
                    Swal.fire({
                        title: '確定要修改嗎?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                icon: 'success',
                                title: '修改成功',
                                showConfirmButton: false,
                            })
                            axios.put(`${webApiBaseAddress}/api/B_PaymentInformation/Sellerinformation/${_this.mID}`, request).then(
                                response => {
                                    //alert(response.data);
                                    setTimeout(function () {
                                        window.location = "/Member/SettingCreditcard"
                                    }, 1500);
                                }
                            );
                        }
                    })
                    //if (ret == true) {
                    //    axios.put(`${webApiBaseAddress}/api/B_PaymentInformation/Sellerinformation/${_this.mID}`, request).then(
                    //        response => {
                    //            alert(response.data);
                    //            window.location = "/Member/SettingCreditcard"
                    //        }
                    //    );
                    //}
                },
                getPersonalDTOes: function () {
					let _this = this;
					axios.get(`${webApiBaseAddress}/api/B_personalinformation/${_this.mID}`).then(
						response => {
							_this.PersonalDTOes = response.data						
						}
					);
				},
            },
        });

    </script>

    }
