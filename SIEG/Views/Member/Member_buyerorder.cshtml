@{
    ViewData["Title"] = "訂單紀錄";
    ViewData["enTitle"] = "Buyerorder";
}

@section Style{
    <link href="~/css/BEN.css" rel="stylesheet">
}
<div id="appVue">
    <partial name="_MemberBanner" />
    <div class="container-fluid">
        <div class="row">
            <partial name="_Membersidebar" />
            <div class="col-lg-9">
                <div class="orderTopWidth ">
                    <h4>購買</h4>
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" data-bs-toggle="tab" data-bs-target="#Currently"
                                    type="button" role="tab" aria-selected="true">
                                <a class="orderTopWidth-1">目前</a>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#determined" type="button"
                                    role="tab" aria-selected="false" @@click="getDTOes">
                                <a class="orderTopWidth-1">待定 </a>
                            </button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" data-bs-toggle="tab" data-bs-target="#history" type="button"
                                    role="tab" aria-selected="false">
                                <a class="orderTopWidth-1">歷史紀錄</a>
                            </button>
                        </li>
                    </ul>
                    <hr>
                    </a>
                </div>
                <div class="tab-content">
                    <!-- 目前出價 -->
                    <div class="tab-pane fade show active" id="Currently" role="tabpanel">
                        <table class="table">
                            <thead>
                                <tr>
                                    <td>名稱</td>
                                    <td>出價</td>
                                    <td>最低賣價</td>
                                    <td>出價日期</td>
                                    <td></td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="item in BuyerBidsDTOes">
                                    <template v-if="item.Edit==true">
                                        <td class="imgTd" data-title="名稱">
                                            <img :src="item.imgFront" class="imgWidth">
                                            <div class="imgMargin">
                                                <div>{{item.productName}}</div>
                                                <span class="nameDilute">{{item.model}}</span>
                                                <div v-if="item.size!= 0">
                                                    <p class=" badge rounded-pill Pcolor">美國尺碼:{{item.size}}</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td data-title="出價">NT$<input v-model="item.price" /></td>
                                        <td data-title="最低賣價">NT${{item.lowPrice}}</td>
                                        <td data-title="出價日期">{{item.newBidTime}}</td>
                                        <td>
                                            <button type="button" class="btn btncolor" @@click="updatebid(item)">確定</button>
                                            <button type="button" class="btn btn-link" @@click="cancel">
                                                <img src="~/images/Benicon/turn-back.png" class="AccountIcon">
                                            </button>
                                        </td>
                                    </template>
                                    <template v-else>
                                        <td class="imgTd" data-title="名稱">
                                            <img :src="item.imgFront" class="imgWidth">
                                            <div class="imgMargin">
                                                <div>{{item.productName}}</div>
                                                <span class="nameDilute">{{item.model}}</span>
                                                <div v-if="item.size!= 0">
                                                    <p class=" badge rounded-pill Pcolor">美國尺碼:{{item.size}}</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td data-title="出價">NT${{item.price}}</td>
                                        <td data-title="最低賣價">NT${{item.lowPrice}}</td>
                                        <td data-title="出價日期">{{item.newBidTime}}</td>
                                        <td>
                                            <button type="button" class="btn btncolor" @@click="bidedit(item.buyerBidId)">修改買價</button>
                                            <button type="button" class="btn btn-link" @@click="deleteOrder(item.buyerBidId)">
                                                <img src="~/images/Benicon/trash.png" class="AccountIcon">
                                            </button>
                                        </td>
                                    </template>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- 待定 -->
                    <div class="tab-pane fade" id="determined" role="tabpanel">
                        <table class="table">
                            <thead>
                                <tr>
                                    <td>名稱</td>
                                    <td>訂單編號</td>
                                    <td>成交日期</td>
                                    <td>購買價錢</td>
                                    <td>地址</td>
                                    <td>狀態</td>
                                    <td></td>
                                </tr>
                            </thead>
                            <tbody>
                                <tr v-for="item in MemberDTOes" v-if="item.state!='已完成' && item.state!='退貨已完成'">
                                    <template v-if="item.state=='商品已送達七天鑑賞'">
                                        <td class="imgTd" data-title="名稱">
                                            <img :src="item.image" class="imgWidth">
                                            <div class="imgMargin">
                                                <div>{{item.productName}}</div>
                                                <span class="nameDilute">{{item.model}}</span>
                                                <div v-if="item.sizeId!= 0">
                                                    <p class=" badge rounded-pill Pcolor ">美國尺碼:{{item.sizeId}}</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td data-title="訂單編號">{{item.orderId}}</td>
                                        <td data-title="成交日期">{{item.newCompletetime}}</td>
                                        <td data-title="購買價錢">NT${{item.price}}</td>
                                        <td data-title="地址">{{item.shippingAddress}}</td>
                                        <td data-title="狀態">{{item.state}}</td>
                                        <td>
                                            <button type="button" class="btn btncolor-2" @@click="updateOrder(item)">確認無誤紐</button>
                                            <button type="button" class="btn btncolor" @@click="returnthegoods(item)">退貨紐</button>
                                        </td>
                                    </template>
                                    <template v-else>
                                        <td class="imgTd" data-title="名稱">
                                            <img :src="item.image" class="imgWidth">
                                            <div class="imgMargin">
                                                <div>{{item.productName}}</div>
                                                <span class="nameDilute">{{item.model}}</span>
                                                <div v-if="item.sizeId!= 0">
                                                    <p class=" badge rounded-pill Pcolor">美國尺碼:{{item.sizeId}}</p>
                                                </div>
                                            </div>
                                        </td>
                                        <td data-title="訂單編號">{{item.orderId}}</td>
                                        <td data-title="成交日期">{{item.newCompletetime}}</td>
                                        <td data-title="購買價錢">NT${{item.price}}</td>
                                        <td data-title="地址">{{item.shippingAddress}}</td>
                                        <td data-title="狀態">{{item.state}}</td>
                                        <td>
                                        </td>
                                    </template>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- 已完成訂單 -->
                    <div class="tab-pane fade" id="history" role="tabpanel">
                        <div class="searchlocation">
                            <input class="form-control" type="text" placeholder="搜尋訂單標號" id="aaaa" v-model="FilterBuyerOrders" @@keyup.enter="filter">
                            <button type="button" class="btn" id="btnlocation" @@click="filter">篩選</button>
                        </div>
                        <hr>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>名稱</th>
                                    <th>訂單編號</th>
                                    <th>購買日期</th>
                                    <th>購買價錢</th>
                                    <th>地址</th>
                                    <th>訂購人</th>
                                    <th>狀態</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr class="detailbgcolor" data-title="名稱" v-for="item in MemberDTOes" v-if="item.state=='已完成' || item.state=='退貨已完成'">
                                    <td class="imgTd-1" data-bs-toggle="modal" :data-bs-target="'#'+item.num" :id="item.orderId">
                                        <img :src="item.image" alt="Image" class="imgWidth" :id="item.orderId">
                                        <div class="imgMargin" :id="item.orderId">
                                            <div :id="item.orderId">{{item.productName}}</div>
                                            <span :id="item.orderId" class="nameDilute">{{item.model}} </span>
                                            <div :id="item.orderId" v-if="item.sizeId!= 0">
                                                <p :id="item.orderId" class=" badge rounded-pill Pcolor">美國尺碼:{{item.sizeId}}</p>
                                            </div>
                                        </div>
                                    </td>
                                    <td data-title="訂單編號">{{item.orderId}}</td>
                                    <td data-title="購買日期">{{item.newCompletetime}}</td>
                                    <td data-title="購買價錢">NT${{item.price}}</td>
                                    <td data-title="地址">{{item.shippingAddress}}</td>
                                    <td data-title="訂購人">{{item.receiver}}</td>
                                    <td data-title="狀態">{{item.state}}</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <!-- modal -->
        <div v-for="item in MemberDTOes">
            <div class="modal fade" :id="item.num" tabindex="-1" aria-labelledby="examplemodallabel" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="examplemodallabel">訂單細節</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="close"></button>
                        </div>
                        <div class="modal-body">
                            <img class="imgWidth" :src="item.image">
                            <div class="orderdetail">
                                <span>訂單編號:</span>
                                <span>{{item.orderId}}</span>
                            </div>
                            <div class="orderdetail">
                                <span>商品名稱:</span>
                                <span>{{item.productName}}</span>
                            </div>
                            <div class="orderdetail" v-if="item.sizeId!= 0">
                                <span>商品尺寸:</span>
                                <span>美國尺碼:{{item.sizeId}}</span>
                            </div>
                            <div class="orderdetail">
                                <span>購買日期:</span>
                                <span>{{item.completeTime}}</span>
                            </div>
                            <div class="orderdetail">
                                <span>購買價錢:</span>
                                <span>NT${{item.price}}</span>
                            </div>
                            <div class="orderdetail">
                                <span>訂購人:</span>
                                <span>{{item.receiver}}</span>
                            </div>
                            @*<div class="orderdetail">
                            <span>收貨人:</span>
                            <span>盧冠佑</span>
                            </div>*@
                            <div class="orderdetail">
                                <span>寄送地址:</span>
                                <span>{{item.shippingAddress}}</span>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <partial name="_FooterPartial" />
</div>
@section Scripts
    {
    <script src="https://cdn.jsdelivr.net/npm/vue@2.6.14/dist/vue.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/1.1.2/axios.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script>
        var webApiBaseAddress = "https://localhost:7139";
        var appVue = new Vue({
            el: "#appVue",
            name: "appVue",
            data: {
                mID: sessionStorage.getItem("mID"),
                MemberDTOes: [],
                BuyerBidsDTOes: [],
                PersonalDTOes: {},
                FilterBuyerOrders: "",
                num: null,
                newCompletetime: null,
                newBidTime: null,
            },
            mounted: function () {
                let _this = this;
                //localStorage.setItem("GETmID", _this.mIDD)
                $('.SidebarBuyerOrders').css("background", "#ededed");
                _this.getMemberDTOes();
                _this.getBuyerBidsDTOes();
                _this.getPersonalDTOes();
            },

            methods: {
                getMemberDTOes: function () {
                    let _this = this;
                    axios.get(`${webApiBaseAddress}/api/B_BuyerOrders/${_this.mID}`).then(
                        response => {
                            _this.MemberDTOes = response.data;
                            var MemberList = [];
                            for (var i = 0; i < _this.MemberDTOes.length; i++) {
                                var item = {};
                                item = _this.MemberDTOes[i];
                                item.num = "A" + item.orderId;
                                var str = item.completeTime;
                                item.newCompletetime = str.split("T")[0];
                                MemberList.push(item);

                            }
                            _this.MemberDTOes = MemberList;
                        }
                    );
                },
                getBuyerBidsDTOes: function () {
                    let _this = this;
                    axios.get(`${webApiBaseAddress}/api/B_BuyerBids/${_this.mID}`).then(
                        response => {
                            _this.BuyerBidsDTOes = response.data;
                            var BuyerBidsList = [];
                            for (var i = 0; i < _this.BuyerBidsDTOes.length; i++) {
                                var item = {};
                                item = _this.BuyerBidsDTOes[i];
                                item.Edit = false;
                                //item.Id=Id;
                                var str = item.bidTime;
                                item.newBidTime = str.split("T")[0];
                                BuyerBidsList.push(item);

                            }
                            _this.BuyerBidsDTOes = BuyerBidsList;
                        }
                    );
                },
                updatebid: function (item) {
                    let _this = this;
                    var request = {};
                    //var Today = new Date();
                    request.Edit = item.Edit;
                    request.buyerBidId = item.buyerBidId;
                    request.imgFront = item.imgFront;
                    request.newBidTime = item.newBidTime;
                    request.price = item.price;
                    request.bidTime = item.bidTime;
                    request.productId = item.productId;
                    request.productName = item.productName;
                    request.size = item.size;
                    request.memberId = item.memberId;
                    request.lowPrice = item.lowPrice;
                    request.FinalPrice = parseInt(item.price) + (100);
                    if (item.price >= item.lowPrice) {
                        //alert(item.productId);
                        //alert(item.sellerAddProductID);
                        sessionStorage.setItem("pID", item.productId);
                        sessionStorage.setItem("quoteID", item.sellerAddProductID);
                        window.location = "/order/index";
                    }
                    else {
                        axios.put(`${webApiBaseAddress}/api/B_BuyerBids/${item.buyerBidId}`, request).then(
                            response => {
                                Swal.fire({
                                    icon: 'success',
                                    title: '修改成功',
                                    showConfirmButton: false,
                                    timer: 1500
                                })
                                //alert(response.data);
                                //_this.filterEmployeeDTOes();
                                _this.getBuyerBidsDTOes();
                                _this.cancel();
                            }
                        );
                    }
                },
                updateOrder: function (ProductConfirmation) {
                    let _this = this;
                    var request = {};
                    request.ProductName = ProductConfirmation.productName;
                    request.Image = ProductConfirmation.image;
                    request.SizeId = ProductConfirmation.sizeId;
                    request.Price = ProductConfirmation.price;
                    request.CompleteTime = ProductConfirmation.completeTime;
                    request.ShippingAddress = ProductConfirmation.shippingAddress;
                    request.State = "已完成";
                    request.Receiver = ProductConfirmation.receiver;
                    request.orderId = ProductConfirmation.orderId;
                    Swal.fire({
                        title: '確認商品無誤?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                icon: 'success',
                                title: '訂單已完成',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            axios.put(`${webApiBaseAddress}/api/B_BuyerOrders/${ProductConfirmation.orderId}`, request).then(
                                response => {
                                    //alert(response.data);
                                    setTimeout(function () {
                                        _this.getMemberDTOes();
                                    }, 1500);
                                }
                            );
                        }
                    })
                    //axios.put(`${webApiBaseAddress}/api/B_BuyerOrders/${ProductConfirmation.orderId}`, request).then(
                    //    response => {
                    //        alert(response.data);
                    //        //_this.filterEmployeeDTOes();
                    //        _this.getMemberDTOes();
                    //    }
                    //);
                },
                returnthegoods: function (returnthegoods) {
                    let _this = this;
                    var request = {};
                    request.ProductName = returnthegoods.productName;
                    request.Image = returnthegoods.image;
                    request.sizeId = returnthegoods.sizeId;
                    request.price = returnthegoods.price;
                    request.Completetime = returnthegoods.newCompletetime;
                    request.ShippingAddress = returnthegoods.shippingAddress;
                    request.State = "申請退貨";
                    request.Receiver = returnthegoods.receiver;
                    request.orderId = returnthegoods.orderId;
                    Swal.fire({
                        title: '確認商品退貨?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                icon: 'success',
                                title: '申請退貨中',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            axios.put(`${webApiBaseAddress}/api/B_BuyerBids/Returns/${returnthegoods.orderId}`, request).then(
                                response => {
                                    //alert(response.data);
                                    setTimeout(function () {
                                        _this.getMemberDTOes();
                                    }, 1500);
                                }
                            );
                        }
                    })
                    //axios.put(`${webApiBaseAddress}/api/B_BuyerBids/Returns/${returnthegoods.orderId}`, request).then(
                    //    response => {
                    //        alert(response.data);
                    //        //_this.filterEmployeeDTOes();
                    //        _this.getMemberDTOes();

                    //    }
                    //);
                },
                bidedit: function (bidid) {
                    let _this = this;
                    var BuyerBidsList = [];
                    for (var i = 0; i < _this.BuyerBidsDTOes.length; i++) {
                        var item = {};
                        item = _this.BuyerBidsDTOes[i];
                        if (bidid == _this.BuyerBidsDTOes[i].buyerBidId) {
                            item.Edit = true;
                        }
                        else {
                            item.Edit = false;
                        }
                        BuyerBidsList.push(item);
                    }
                    _this.BuyerBidsDTOes = BuyerBidsList;
                },

                cancel: function () {
                    let _this = this;
                    var BuyerBidsList = [];
                    for (var i = 0; i < _this.BuyerBidsDTOes.length; i++) {
                        var item = {};
                        item = _this.BuyerBidsDTOes[i];
                        item.Edit = false;
                        BuyerBidsList.push(item);
                    }
                    _this.BuyerBidsDTOes = BuyerBidsList;
                    _this.getBuyerBidsDTOes();
                },

                getDTOes: function () {
                    this.FilterBuyerOrders = "";
                    let _this = this;
                    _this.getMemberDTOes();

                },
                filter: function () {
                    let _this = this;
                    var request = {};
                    if (_this.FilterBuyerOrders == "" || _this.FilterBuyerOrders == null) {
                        _this.getMemberDTOes();
                    }
                    else {
                        request.orderId = _this.FilterBuyerOrders;
                        axios.post(`${webApiBaseAddress}/api/B_BuyerOrders/FilterBuyerOrders/${_this.mID}`, request).then(
                            response => {
                                _this.MemberDTOes = response.data;
                                var MemberList = [];
                                for (var i = 0; i < _this.MemberDTOes.length; i++) {
                                    var item = {};
                                    item = _this.MemberDTOes[i];
                                    item.num = "A" + item.orderId;
                                    var str = item.completeTime;
                                    item.newCompletetime = str.split("T")[0];
                                    MemberList.push(item);
                                }
                                _this.MemberDTOes = MemberList;

                            }
                        );
                    }
                },
                deleteOrder: function (orderId) {
                    let _this = this;
                    //var ret = confirm("確定要刪除嗎?");
                    Swal.fire({
                        title: '確定要刪除嗎?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                    }).then((result) => {
                        if (result.isConfirmed) {
                            Swal.fire({
                                icon: 'success',
                                title: '刪除成功',
                                showConfirmButton: false,
                                timer: 1500
                            })
                            axios.delete(`${webApiBaseAddress}/api/B_BuyerBids/${orderId}`).then(
                                response => {
                                    _this.getBuyerBidsDTOes();
                                }
                            );
                        }
                    })
                    //if (ret == true) {
                    //    axios.delete(`${webApiBaseAddress}/api/B_BuyerBids/${orderId}`).then(
                    //        response => {
                    //            alert(response.data);
                    //            _this.getBuyerBidsDTOes();
                    //        }
                    //    );
                    //}
                },
                getPersonalDTOes: function () {
                    let _this = this;
                    axios.get(`${webApiBaseAddress}/api/B_personalinformation/${_this.mID}`).then(
                        response => {
                            _this.PersonalDTOes = response.data
                        }
                    );
                },
            },
        });
    </script>

    }











